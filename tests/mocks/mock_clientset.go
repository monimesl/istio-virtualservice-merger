// Code generated by MockGen. DO NOT EDIT.
// Source: istio.io/client-go/pkg/clientset/versioned (interfaces: Interface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1alpha1 "istio.io/client-go/pkg/clientset/versioned/typed/extensions/v1alpha1"
	v1alpha3 "istio.io/client-go/pkg/clientset/versioned/typed/networking/v1alpha3"
	v1beta1 "istio.io/client-go/pkg/clientset/versioned/typed/networking/v1beta1"
	v1beta10 "istio.io/client-go/pkg/clientset/versioned/typed/security/v1beta1"
	v1alpha10 "istio.io/client-go/pkg/clientset/versioned/typed/telemetry/v1alpha1"
	discovery "k8s.io/client-go/discovery"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// Discovery mocks base method.
func (m *MockInterface) Discovery() discovery.DiscoveryInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Discovery")
	ret0, _ := ret[0].(discovery.DiscoveryInterface)
	return ret0
}

// Discovery indicates an expected call of Discovery.
func (mr *MockInterfaceMockRecorder) Discovery() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Discovery", reflect.TypeOf((*MockInterface)(nil).Discovery))
}

// ExtensionsV1alpha1 mocks base method.
func (m *MockInterface) ExtensionsV1alpha1() v1alpha1.ExtensionsV1alpha1Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExtensionsV1alpha1")
	ret0, _ := ret[0].(v1alpha1.ExtensionsV1alpha1Interface)
	return ret0
}

// ExtensionsV1alpha1 indicates an expected call of ExtensionsV1alpha1.
func (mr *MockInterfaceMockRecorder) ExtensionsV1alpha1() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExtensionsV1alpha1", reflect.TypeOf((*MockInterface)(nil).ExtensionsV1alpha1))
}

// NetworkingV1alpha3 mocks base method.
func (m *MockInterface) NetworkingV1alpha3() v1alpha3.NetworkingV1alpha3Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NetworkingV1alpha3")
	ret0, _ := ret[0].(v1alpha3.NetworkingV1alpha3Interface)
	return ret0
}

// NetworkingV1alpha3 indicates an expected call of NetworkingV1alpha3.
func (mr *MockInterfaceMockRecorder) NetworkingV1alpha3() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NetworkingV1alpha3", reflect.TypeOf((*MockInterface)(nil).NetworkingV1alpha3))
}

// NetworkingV1beta1 mocks base method.
func (m *MockInterface) NetworkingV1beta1() v1beta1.NetworkingV1beta1Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NetworkingV1beta1")
	ret0, _ := ret[0].(v1beta1.NetworkingV1beta1Interface)
	return ret0
}

// NetworkingV1beta1 indicates an expected call of NetworkingV1beta1.
func (mr *MockInterfaceMockRecorder) NetworkingV1beta1() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NetworkingV1beta1", reflect.TypeOf((*MockInterface)(nil).NetworkingV1beta1))
}

// SecurityV1beta1 mocks base method.
func (m *MockInterface) SecurityV1beta1() v1beta10.SecurityV1beta1Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SecurityV1beta1")
	ret0, _ := ret[0].(v1beta10.SecurityV1beta1Interface)
	return ret0
}

// SecurityV1beta1 indicates an expected call of SecurityV1beta1.
func (mr *MockInterfaceMockRecorder) SecurityV1beta1() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SecurityV1beta1", reflect.TypeOf((*MockInterface)(nil).SecurityV1beta1))
}

// TelemetryV1alpha1 mocks base method.
func (m *MockInterface) TelemetryV1alpha1() v1alpha10.TelemetryV1alpha1Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TelemetryV1alpha1")
	ret0, _ := ret[0].(v1alpha10.TelemetryV1alpha1Interface)
	return ret0
}

// TelemetryV1alpha1 indicates an expected call of TelemetryV1alpha1.
func (mr *MockInterfaceMockRecorder) TelemetryV1alpha1() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TelemetryV1alpha1", reflect.TypeOf((*MockInterface)(nil).TelemetryV1alpha1))
}
